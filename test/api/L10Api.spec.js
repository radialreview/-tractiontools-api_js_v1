/**
 * Traction Tools API - V1
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.6-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TractionToolsApiV1);
  }
}(this, function(expect, TractionToolsApiV1) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TractionToolsApiV1.L10Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('L10Api', function() {
    describe('l10AddAttendee', function() {
      it('should call l10AddAttendee successfully', function(done) {
        //uncomment below and update the code to test l10AddAttendee
        //instance.l10AddAttendee(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10AttachMeasurableL10', function() {
      it('should call l10AttachMeasurableL10 successfully', function(done) {
        //uncomment below and update the code to test l10AttachMeasurableL10
        //instance.l10AttachMeasurableL10(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10AttachRockMeetingL10', function() {
      it('should call l10AttachRockMeetingL10 successfully', function(done) {
        //uncomment below and update the code to test l10AttachRockMeetingL10
        //instance.l10AttachRockMeetingL10(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10CreateHeadlineL10', function() {
      it('should call l10CreateHeadlineL10 successfully', function(done) {
        //uncomment below and update the code to test l10CreateHeadlineL10
        //instance.l10CreateHeadlineL10(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10CreateIssueL10', function() {
      it('should call l10CreateIssueL10 successfully', function(done) {
        //uncomment below and update the code to test l10CreateIssueL10
        //instance.l10CreateIssueL10(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10CreateL10', function() {
      it('should call l10CreateL10 successfully', function(done) {
        //uncomment below and update the code to test l10CreateL10
        //instance.l10CreateL10(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10CreateRockL10', function() {
      it('should call l10CreateRockL10 successfully', function(done) {
        //uncomment below and update the code to test l10CreateRockL10
        //instance.l10CreateRockL10(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10CreateTodoL10', function() {
      it('should call l10CreateTodoL10 successfully', function(done) {
        //uncomment below and update the code to test l10CreateTodoL10
        //instance.l10CreateTodoL10(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10EditL10', function() {
      it('should call l10EditL10 successfully', function(done) {
        //uncomment below and update the code to test l10EditL10
        //instance.l10EditL10(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10GetL10', function() {
      it('should call l10GetL10 successfully', function(done) {
        //uncomment below and update the code to test l10GetL10
        //instance.l10GetL10(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10GetL10Attendees', function() {
      it('should call l10GetL10Attendees successfully', function(done) {
        //uncomment below and update the code to test l10GetL10Attendees
        //instance.l10GetL10Attendees(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10GetL10List', function() {
      it('should call l10GetL10List successfully', function(done) {
        //uncomment below and update the code to test l10GetL10List
        //instance.defaultHeaders.Authorization = token;
        instance.l10GetL10List(function(error, data) {
          if (error) throw error;

          expect(data).to.be.an('array');
          // var firstData = data[0];
          // expect(firstData).to.not.be(null);
          // expect(firstData.Name).to.be('Test');

          done();
        });
        
      });
    });
    describe('l10GetL10Rocks', function() {
      it('should call l10GetL10Rocks successfully', function(done) {
        //uncomment below and update the code to test l10GetL10Rocks
        //instance.l10GetL10Rocks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10GetRecurrenceHeadlines', function() {
      it('should call l10GetRecurrenceHeadlines successfully', function(done) {
        //uncomment below and update the code to test l10GetRecurrenceHeadlines
        //instance.l10GetRecurrenceHeadlines(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10GetRecurrenceIssues', function() {
      it('should call l10GetRecurrenceIssues successfully', function(done) {
        //uncomment below and update the code to test l10GetRecurrenceIssues
        //instance.l10GetRecurrenceIssues(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10GetRecurrenceTodos', function() {
      it('should call l10GetRecurrenceTodos successfully', function(done) {
        //uncomment below and update the code to test l10GetRecurrenceTodos
        //instance.l10GetRecurrenceTodos(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10GetUserHeadlines', function() {
      it('should call l10GetUserHeadlines successfully', function(done) {
        //uncomment below and update the code to test l10GetUserHeadlines
        //instance.l10GetUserHeadlines(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10GetUserIssues', function() {
      it('should call l10GetUserIssues successfully', function(done) {
        //uncomment below and update the code to test l10GetUserIssues
        //instance.l10GetUserIssues(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10GetUserL10List', function() {
      it('should call l10GetUserL10List successfully', function(done) {
        //uncomment below and update the code to test l10GetUserL10List
        //instance.l10GetUserL10List(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10GetUserMeasurables', function() {
      it('should call l10GetUserMeasurables successfully', function(done) {
        //uncomment below and update the code to test l10GetUserMeasurables
        //instance.l10GetUserMeasurables(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10GetUserRocks', function() {
      it('should call l10GetUserRocks successfully', function(done) {
        //uncomment below and update the code to test l10GetUserRocks
        //instance.l10GetUserRocks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10GetUserTodos', function() {
      it('should call l10GetUserTodos successfully', function(done) {
        //uncomment below and update the code to test l10GetUserTodos
        //instance.l10GetUserTodos(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10RemoveHeadlineL10', function() {
      it('should call l10RemoveHeadlineL10 successfully', function(done) {
        //uncomment below and update the code to test l10RemoveHeadlineL10
        //instance.l10RemoveHeadlineL10(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10RemoveIssueL10', function() {
      it('should call l10RemoveIssueL10 successfully', function(done) {
        //uncomment below and update the code to test l10RemoveIssueL10
        //instance.l10RemoveIssueL10(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10RemoveL10', function() {
      it('should call l10RemoveL10 successfully', function(done) {
        //uncomment below and update the code to test l10RemoveL10
        //instance.l10RemoveL10(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10RemoveMeasurableL10', function() {
      it('should call l10RemoveMeasurableL10 successfully', function(done) {
        //uncomment below and update the code to test l10RemoveMeasurableL10
        //instance.l10RemoveMeasurableL10(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('l10RemoveRockL10', function() {
      it('should call l10RemoveRockL10 successfully', function(done) {
        //uncomment below and update the code to test l10RemoveRockL10
        //instance.l10RemoveRockL10(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
